-- MySQL Script generated by MySQL Workbench
-- Fri Aug  3 15:29:28 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema BookStore
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema BookStore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BookStore` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema bookstore
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bookstore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bookstore` DEFAULT CHARACTER SET utf8 ;
USE `BookStore` ;

-- -----------------------------------------------------
-- Table `BookStore`.`books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`books` (
  `book_id` INT NOT NULL,
  `title` VARCHAR(45) NULL,
  `author` VARCHAR(45) NULL,
  `price` REAL NULL,
  `global_discount` REAL NULL,
  `quantity_in_stock` INT NULL,
  PRIMARY KEY (`book_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`suppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`suppliers` (
  `supplier_id` INT NOT NULL,
  `supplier_name` VARCHAR(45) NULL,
  PRIMARY KEY (`supplier_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`customers` (
  `customer_id` INT NOT NULL,
  `lname` VARCHAR(45) NULL,
  `fname` VARCHAR(45) NULL,
  `tel` VARCHAR(45) NULL,
  `discount` REAL NULL,
  `join_date` DATE NULL,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`booksuppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`booksuppliers` (
  `book_id` INT NOT NULL,
  `supplier_id` INT NOT NULL,
  `price` REAL NULL,
  `suppliers_supplier_id` INT NULL,
  `books_book_id` INT NULL,
  PRIMARY KEY (`book_id`, `supplier_id`),
  INDEX `fk_booksuppliers_suppliers1_idx` (`suppliers_supplier_id` ASC),
  INDEX `fk_booksuppliers_books1_idx` (`books_book_id` ASC),
  CONSTRAINT `fk_booksuppliers_suppliers1`
    FOREIGN KEY (`suppliers_supplier_id`)
    REFERENCES `BookStore`.`suppliers` (`supplier_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_booksuppliers_books1`
    FOREIGN KEY (`books_book_id`)
    REFERENCES `BookStore`.`books` (`book_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`employees` (
  `employee_id` INT NOT NULL,
  `lname` VARCHAR(45) NULL,
  `fname` VARCHAR(45) NULL,
  PRIMARY KEY (`employee_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`status_codes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`status_codes` (
  `status` INT NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`status`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`orders` (
  `order_id` INT NOT NULL,
  `customer_id` INT NULL,
  `employee_id` INT NULL,
  `date` DATE NULL,
  `init_status` INT NULL,
  `end_status` INT NULL,
  `customers_customer_id` INT NULL,
  `employees_employee_id` INT NULL,
  `status_codes_status` INT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `fk_orders_customers1_idx` (`customers_customer_id` ASC),
  INDEX `fk_orders_employees1_idx` (`employees_employee_id` ASC),
  INDEX `fk_orders_status_codes1_idx` (`status_codes_status` ASC),
  CONSTRAINT `fk_orders_customers1`
    FOREIGN KEY (`customers_customer_id`)
    REFERENCES `BookStore`.`customers` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_employees1`
    FOREIGN KEY (`employees_employee_id`)
    REFERENCES `BookStore`.`employees` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_status_codes1`
    FOREIGN KEY (`status_codes_status`)
    REFERENCES `BookStore`.`status_codes` (`status`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`orderdetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`orderdetails` (
  `order_id` INT NOT NULL,
  `book_id` INT NOT NULL,
  `quantity` INT NULL,
  `orderdetails_order_id` INT NULL,
  `orderdetails_book_id` INT NULL,
  `orders_order_id` INT NULL,
  `books_book_id` INT NULL,
  PRIMARY KEY (`order_id`, `book_id`),
  INDEX `fk_orderdetails_orders_idx` (`orders_order_id` ASC),
  INDEX `fk_orderdetails_books1_idx` (`books_book_id` ASC),
  CONSTRAINT `fk_orderdetails_orders`
    FOREIGN KEY (`orders_order_id`)
    REFERENCES `BookStore`.`orders` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orderdetails_books1`
    FOREIGN KEY (`books_book_id`)
    REFERENCES `BookStore`.`books` (`book_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`orders_from_suppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`orders_from_suppliers` (
  `order_id` INT NOT NULL,
  `supplier_id` INT NULL,
  `employee_id` INT NULL,
  `date` DATE NULL,
  `status` INT NULL,
  `employees_employee_id` INT NULL,
  `suppliers_supplier_id` INT NULL,
  `orders_from_suppliers_order_id` INT NULL,
  `status_codes_status` INT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `fk_ordersfromsuppliers_employees1_idx` (`employees_employee_id` ASC),
  INDEX `fk_ordersfromsuppliers_suppliers1_idx` (`suppliers_supplier_id` ASC),
  INDEX `fk_orders_from_suppliers_status_codes1_idx` (`status_codes_status` ASC),
  CONSTRAINT `fk_ordersfromsuppliers_employees1`
    FOREIGN KEY (`employees_employee_id`)
    REFERENCES `BookStore`.`employees` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ordersfromsuppliers_suppliers1`
    FOREIGN KEY (`suppliers_supplier_id`)
    REFERENCES `BookStore`.`suppliers` (`supplier_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_from_suppliers_status_codes1`
    FOREIGN KEY (`status_codes_status`)
    REFERENCES `BookStore`.`status_codes` (`status`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`ordersfromsuppliersdetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`ordersfromsuppliersdetails` (
  `order_id` INT NOT NULL,
  `book_id` INT NOT NULL,
  `quantity` INT NULL,
  `ordersfromsuppliers_order_id` INT NULL,
  `books_book_id` INT NULL,
  PRIMARY KEY (`order_id`, `book_id`),
  INDEX `fk_ordersfromsuppliersdetails_ordersfromsuppliers1_idx` (`ordersfromsuppliers_order_id` ASC),
  INDEX `fk_ordersfromsuppliersdetails_books1_idx` (`books_book_id` ASC),
  CONSTRAINT `fk_ordersfromsuppliersdetails_ordersfromsuppliers1`
    FOREIGN KEY (`ordersfromsuppliers_order_id`)
    REFERENCES `BookStore`.`orders_from_suppliers` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ordersfromsuppliersdetails_books1`
    FOREIGN KEY (`books_book_id`)
    REFERENCES `BookStore`.`books` (`book_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `bookstore` ;

-- -----------------------------------------------------
-- Table `bookstore`.`books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`books` (
  `book_id` INT(11) NOT NULL,
  `title` VARCHAR(45) NULL DEFAULT NULL,
  `author` VARCHAR(45) NULL DEFAULT NULL,
  `price` DOUBLE NULL DEFAULT NULL,
  `global_discount` DOUBLE NULL DEFAULT NULL,
  `quantity_in_stock` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`book_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bookstore`.`suppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`suppliers` (
  `supplier_id` INT(11) NOT NULL,
  `supplier_name` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`supplier_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bookstore`.`booksuppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`booksuppliers` (
  `book_id` INT(11) NOT NULL,
  `supplier_id` INT(11) NOT NULL,
  `price` DOUBLE NULL DEFAULT NULL,
  `suppliers_supplier_id` INT(11) NULL DEFAULT NULL,
  `books_book_id` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`book_id`, `supplier_id`),
  INDEX `fk_booksuppliers_suppliers1_idx` (`suppliers_supplier_id` ASC),
  INDEX `fk_booksuppliers_books1_idx` (`books_book_id` ASC),
  CONSTRAINT `fk_booksuppliers_books1`
    FOREIGN KEY (`books_book_id`)
    REFERENCES `bookstore`.`books` (`book_id`),
  CONSTRAINT `fk_booksuppliers_suppliers1`
    FOREIGN KEY (`suppliers_supplier_id`)
    REFERENCES `bookstore`.`suppliers` (`supplier_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bookstore`.`customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`customers` (
  `customer_id` INT(11) NOT NULL,
  `lname` VARCHAR(45) NULL DEFAULT NULL,
  `fname` VARCHAR(45) NULL DEFAULT NULL,
  `tel` VARCHAR(45) NULL DEFAULT NULL,
  `discount` DOUBLE NULL DEFAULT NULL,
  `join_date` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bookstore`.`employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`employees` (
  `employee_id` INT(11) NOT NULL,
  `lname` VARCHAR(45) NULL DEFAULT NULL,
  `fname` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`employee_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bookstore`.`status_codes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`status_codes` (
  `status` INT(11) NOT NULL,
  `description` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`status`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bookstore`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`orders` (
  `order_id` INT(11) NOT NULL,
  `customer_id` INT(11) NULL DEFAULT NULL,
  `employee_id` INT(11) NULL DEFAULT NULL,
  `date` DATE NULL DEFAULT NULL,
  `init_status` INT(11) NULL DEFAULT NULL,
  `end_status` INT(11) NULL DEFAULT NULL,
  `customers_customer_id` INT(11) NULL DEFAULT NULL,
  `employees_employee_id` INT(11) NULL DEFAULT NULL,
  `status_codes_status` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `fk_orders_customers1_idx` (`customers_customer_id` ASC),
  INDEX `fk_orders_employees1_idx` (`employees_employee_id` ASC),
  INDEX `fk_orders_status_codes1_idx` (`status_codes_status` ASC),
  CONSTRAINT `fk_orders_customers1`
    FOREIGN KEY (`customers_customer_id`)
    REFERENCES `bookstore`.`customers` (`customer_id`),
  CONSTRAINT `fk_orders_employees1`
    FOREIGN KEY (`employees_employee_id`)
    REFERENCES `bookstore`.`employees` (`employee_id`),
  CONSTRAINT `fk_orders_status_codes1`
    FOREIGN KEY (`status_codes_status`)
    REFERENCES `bookstore`.`status_codes` (`status`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bookstore`.`orderdetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`orderdetails` (
  `order_id` INT(11) NOT NULL,
  `book_id` INT(11) NOT NULL,
  `quantity` INT(11) NULL DEFAULT NULL,
  `orderdetails_order_id` INT(11) NULL DEFAULT NULL,
  `orderdetails_book_id` INT(11) NULL DEFAULT NULL,
  `orders_order_id` INT(11) NULL DEFAULT NULL,
  `books_book_id` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`order_id`, `book_id`),
  INDEX `fk_orderdetails_orders_idx` (`orders_order_id` ASC),
  INDEX `fk_orderdetails_books1_idx` (`books_book_id` ASC),
  CONSTRAINT `fk_orderdetails_books1`
    FOREIGN KEY (`books_book_id`)
    REFERENCES `bookstore`.`books` (`book_id`),
  CONSTRAINT `fk_orderdetails_orders`
    FOREIGN KEY (`orders_order_id`)
    REFERENCES `bookstore`.`orders` (`order_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bookstore`.`orders_from_suppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`orders_from_suppliers` (
  `order_id` INT(11) NOT NULL,
  `supplier_id` INT(11) NULL DEFAULT NULL,
  `employee_id` INT(11) NULL DEFAULT NULL,
  `date` DATE NULL DEFAULT NULL,
  `status` INT(11) NULL DEFAULT NULL,
  `employees_employee_id` INT(11) NOT NULL,
  `suppliers_supplier_id` INT(11) NOT NULL,
  `orders_from_suppliers_order_id` INT(11) NOT NULL,
  `status_codes_status` INT(11) NOT NULL,
  PRIMARY KEY (`order_id`, `suppliers_supplier_id`, `employees_employee_id`, `status_codes_status`),
  INDEX `fk_ordersfromsuppliers_employees1_idx` (`employees_employee_id` ASC),
  INDEX `fk_ordersfromsuppliers_suppliers1_idx` (`suppliers_supplier_id` ASC),
  INDEX `fk_orders_from_suppliers_status_codes1_idx` (`status_codes_status` ASC),
  CONSTRAINT `fk_orders_from_suppliers_status_codes1`
    FOREIGN KEY (`status_codes_status`)
    REFERENCES `bookstore`.`status_codes` (`status`),
  CONSTRAINT `fk_ordersfromsuppliers_employees1`
    FOREIGN KEY (`employees_employee_id`)
    REFERENCES `bookstore`.`employees` (`employee_id`),
  CONSTRAINT `fk_ordersfromsuppliers_suppliers1`
    FOREIGN KEY (`suppliers_supplier_id`)
    REFERENCES `bookstore`.`suppliers` (`supplier_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bookstore`.`ordersfromsuppliersdetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`ordersfromsuppliersdetails` (
  `order_id` INT(11) NOT NULL,
  `book_id` INT(11) NOT NULL,
  `quantity` INT(11) NULL DEFAULT NULL,
  `ordersfromsuppliers_order_id` INT(11) NOT NULL,
  `books_book_id` INT(11) NOT NULL,
  PRIMARY KEY (`order_id`, `book_id`, `ordersfromsuppliers_order_id`, `books_book_id`),
  INDEX `fk_ordersfromsuppliersdetails_ordersfromsuppliers1_idx` (`ordersfromsuppliers_order_id` ASC),
  INDEX `fk_ordersfromsuppliersdetails_books1_idx` (`books_book_id` ASC),
  CONSTRAINT `fk_ordersfromsuppliersdetails_books1`
    FOREIGN KEY (`books_book_id`)
    REFERENCES `bookstore`.`books` (`book_id`),
  CONSTRAINT `fk_ordersfromsuppliersdetails_ordersfromsuppliers1`
    FOREIGN KEY (`ordersfromsuppliers_order_id`)
    REFERENCES `bookstore`.`orders_from_suppliers` (`order_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
